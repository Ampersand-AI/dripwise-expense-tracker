
import React, { useState } from 'react';
import { Bot, Shield, Sparkles } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { motion } from 'framer-motion';
import InsightCard, { AIInsight } from './InsightCard';
import SuspiciousActivityCard, { SuspiciousActivity } from './SuspiciousActivityCard';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { useToast } from '@/hooks/use-toast';

// Sample insights - would be generated by Gemini API in production
const sampleInsights: AIInsight[] = [
  {
    id: '1',
    title: 'Unusual spending detected',
    description: 'Your food expenses are 30% higher than your monthly average.',
    type: 'spending',
    date: new Date()
  },
  {
    id: '2',
    title: 'Smart saving opportunity',
    description: 'Reducing coffee purchases by 2 per week could save you $32 this month.',
    type: 'savings',
    date: new Date()
  },
  {
    id: '3',
    title: 'Spending trend identified',
    description: 'Your travel expenses tend to increase at the end of each quarter.',
    type: 'trend',
    date: new Date()
  }
];

// Sample suspicious activities
const sampleSuspiciousActivities: SuspiciousActivity[] = [
  {
    id: 'susp-1',
    title: 'Possible duplicate transaction',
    description: 'You have two similar transactions at Starbucks on the same day.',
    amount: 12.95,
    merchant: 'Starbucks',
    date: new Date(),
    type: 'duplicate',
    confidence: 0.92,
  },
  {
    id: 'susp-2',
    title: 'Unusual transaction amount',
    description: 'This Uber expense is 3x higher than your typical rides.',
    amount: 64.50,
    merchant: 'Uber',
    date: new Date(),
    type: 'unusual_amount',
    confidence: 0.78,
  }
];

const AIInsightsSection: React.FC = () => {
  const [activities, setActivities] = useState<SuspiciousActivity[]>(sampleSuspiciousActivities);
  const { toast } = useToast();

  const handleConfirmSuspiciousActivity = (id: string) => {
    toast({
      title: "Thanks for confirming",
      description: "We've flagged this transaction for review.",
    });
    setActivities(activities.filter(activity => activity.id !== id));
  };

  const handleDismissSuspiciousActivity = (id: string) => {
    toast({
      title: "Okay, no problem",
      description: "We'll remember this for next time.",
    });
    setActivities(activities.filter(activity => activity.id !== id));
  };

  return (
    <section>
      <div className="flex justify-between items-center mb-4">
        <div className="flex items-center gap-2">
          <h2 className="text-xl font-semibold">AI Spending Insights</h2>
          <Sparkles className="h-5 w-5 text-primary" />
        </div>
        <Button variant="outline" size="sm" className="text-sm">
          Ask AI Assistant
          <Bot className="ml-2 h-4 w-4" />
        </Button>
      </div>
      
      <Tabs defaultValue="insights" className="w-full">
        <TabsList className="mb-4">
          <TabsTrigger value="insights">Spending Insights</TabsTrigger>
          <TabsTrigger value="alerts" className="relative">
            Alerts
            {activities.length > 0 && (
              <span className="absolute -top-1 -right-1 flex h-4 w-4 items-center justify-center rounded-full bg-primary text-[10px] text-primary-foreground">
                {activities.length}
              </span>
            )}
          </TabsTrigger>
        </TabsList>
        
        <TabsContent value="insights" className="mt-0">
          <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
            {sampleInsights.map((insight, index) => (
              <motion.div
                key={insight.id}
                initial={{ y: 20, opacity: 0 }}
                animate={{ y: 0, opacity: 1 }}
                transition={{ duration: 0.3, delay: index * 0.1 }}
              >
                <InsightCard insight={insight} />
              </motion.div>
            ))}
          </div>
        </TabsContent>
        
        <TabsContent value="alerts" className="mt-0">
          <div className="space-y-4">
            {activities.length > 0 ? (
              activities.map((activity, index) => (
                <motion.div
                  key={activity.id}
                  initial={{ x: -20, opacity: 0 }}
                  animate={{ x: 0, opacity: 1 }}
                  transition={{ duration: 0.3, delay: index * 0.1 }}
                >
                  <SuspiciousActivityCard 
                    activity={activity} 
                    onConfirm={() => handleConfirmSuspiciousActivity(activity.id)}
                    onDismiss={() => handleDismissSuspiciousActivity(activity.id)}
                  />
                </motion.div>
              ))
            ) : (
              <div className="flex flex-col items-center justify-center py-10 text-center">
                <Shield className="h-12 w-12 text-muted-foreground/40 mb-3" />
                <h3 className="text-lg font-medium mb-1">All clear!</h3>
                <p className="text-muted-foreground max-w-md">
                  I haven't detected any suspicious activity in your recent transactions.
                </p>
              </div>
            )}
          </div>
        </TabsContent>
      </Tabs>
    </section>
  );
};

export default AIInsightsSection;
